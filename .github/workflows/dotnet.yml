name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
        source-url: https://nuget.pkg.github.com/tailspin-test/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies for all projects
      run: dotnet restore

    - name: Build all projects
      run: dotnet build --configuration Release --no-restore

    - name: List out directory contents
      run: |
          echo "Listing the contents of the GitHub workspace directory"
          ls ${{ github.workspace }}

          echo "Recursively listing all contents of the current directory"
          ls -R

    - name: Run unit tests
      run: dotnet test ${{ github.workspace }}/AnimalAdoption.Web.Portal.UnitTests/AnimalAdoption.Web.Portal.UnitTests.csproj --no-build --verbosity normal --configuration Release
   
    # Pack and publish logic package
    - name: Pack logic package
      run: dotnet pack ${{ github.workspace }}/AnimalAdoption.Common.Logic/AnimalAdoption.Common.Logic.csproj --no-build --configuration Release
    
    - name: Push logic package
      run: dotnet nuget push ${{ github.workspace }}/AnimalAdoption.Common.Logic/**/*.nupkg --skip-duplicate

    # Publish and build portal
    - name: Publish portal project in Release mode
      run: dotnet publish ${{ github.workspace }}/AnimalAdoption.Web.Portal/AnimalAdoption.Web.Portal.csproj --configuration Release --no-build --output ./taa-portal/
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.1.3
      with:
        name: drop
        path:  ${{ github.workspace }}/taa-portal/
        if-no-files-found: error
        
  deploy:
    runs-on: ubuntu-latest
    environment: Test
    needs: build
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: drop
        path: drop
    
    - name: Deploy to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.APP_NAME }}
        package: drop
        publish-profile: ${{ secrets.PUBLISH_PROFILE_SETTINGS }}
